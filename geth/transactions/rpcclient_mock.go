// Code generated by MockGen. DO NOT EDIT.
// Source: geth/transactions/txqueue_manager_test.go

// Package transactions is a generated GoMock package.
package transactions

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	rpc "github.com/status-im/status-go/geth/rpc"
)

// MocktestRPCClientProvider is a mock of testRPCClientProvider interface
type MocktestRPCClientProvider struct {
	ctrl     *gomock.Controller
	recorder *MocktestRPCClientProviderMockRecorder
}

// MocktestRPCClientProviderMockRecorder is the mock recorder for MocktestRPCClientProvider
type MocktestRPCClientProviderMockRecorder struct {
	mock *MocktestRPCClientProvider
}

// NewMocktestRPCClientProvider creates a new mock instance
func NewMocktestRPCClientProvider(ctrl *gomock.Controller) *MocktestRPCClientProvider {
	mock := &MocktestRPCClientProvider{ctrl: ctrl}
	mock.recorder = &MocktestRPCClientProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MocktestRPCClientProvider) EXPECT() *MocktestRPCClientProviderMockRecorder {
	return m.recorder
}

// RPCClient mocks base method
func (m *MocktestRPCClientProvider) RPCClient() *rpc.Client {
	ret := m.ctrl.Call(m, "RPCClient")
	ret0, _ := ret[0].(*rpc.Client)
	return ret0
}

// RPCClient indicates an expected call of RPCClient
func (mr *MocktestRPCClientProviderMockRecorder) RPCClient() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RPCClient", reflect.TypeOf((*MocktestRPCClientProvider)(nil).RPCClient))
}
